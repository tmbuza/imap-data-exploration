from snakemake.utils import min_version

min_version("6.10.0")

# Configuration file containing all user-specified settings
configfile: "config/config.yml"

# # Debug information
# print("Configuration:")
# print(config)

report: "report/workflow.rst"

include: "rules/qiime2_viz.smk"
# include: "rules/visual_types.smk"


rule FINAL_TARGET:
    input:
        "docs/index.html",

        # "data/feature.qza", 
        # "data/taxonomy.qza", 
        # "data/metadata.tsv",
        # "data/shannon.qza",

        # "resources/feature_table.qza",
        # "resources/sample_metadata.tsv",
        # "resources/taxonomy.qza",
        # "resources/rooted_tree.qza",
        # "resources/shannon_vector.qza",
        
        # "data/qiime2_phyloseq.rds",
        # "data/qiime2_phyloseq_demo.rds",

		# "figures/q2r_venndiagram.svg",
		# "figures/q2r_lineplot.svg",
		# "figures/q2r_jitterplot.svg",
		# "figures/q2r_pcoa.svg",
		# "figures/q2r_heatmap.svg",
		# "figures/q2r_barplot.svg",


        # expand("visual_types/heatmaps/{prefix}.Rmd", prefix=config["heatmaps"]),
        # expand("visual_types/hclusters/{prefix}.Rmd", prefix=config["hclusters"]),
        # expand("visual_types/barplots/{prefix}.Rmd", prefix=config["barplots"]),
        # expand("visual_types/boxplots/{prefix}.Rmd", prefix=config["boxplots"]),
        # expand("visual_types/ordinations/{prefix}.Rmd", prefix=config["ordinations"]),
        # expand("visual_types/phylotrees/{prefix}.Rmd", prefix=config["phylotrees"]),


# Rule to generate the rule graph and create the dags folder if it doesn't exist
rule generate_rulegraph:
    output:
        directory("dags"),
        "dags/rulegraph.png",
        "dags/rulegraph.svg",

    shell:
        """
        snakemake --unlock;
        mkdir -p {output[0]};
        snakemake --rulegraph | dot -Tpng > {output[1]};
        snakemake --rulegraph | dot -Tsvg > {output[2]};
        """

# Rule to generate a directory tree
rule project_tree:
    output:
        directory("output"),
        "reports/project_tree.txt"
    shell:
        """
        snakemake --unlock \
        && mkdir -p {output[0]} \
        && echo "Project Tree" > {output[1]} \
        && tree -L 2 . >> {output[1]}
        """

# Rule to generate SnakeMake report
rule snakemake_report:
    output:
        "reports/snakemake_report.html"
    shell:
        "snakemake --keep-going --use-conda --report {output[0]}"


rule render_bs4_book:
    input:
        "index.Rmd",
        "reports/snakemake_report.html",
        "reports/project_tree.txt",
        "dags/rulegraph.png",
        "dags/rulegraph.svg",
    
    output:
        "docs/index.html"
    shell:
        "R -e 'bookdown::render_book(input = \"index.Rmd\", output_format = \"bookdown::bs4_book\", output_dir = \"docs\")'"
